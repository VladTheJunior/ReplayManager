<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ReplayManager" xmlns:system="clr-namespace:System;assembly=netstandard">
    <ControlTemplate x:Key="Spinner">
        <Grid>
            <Rectangle Width="200" Height="200" RenderTransformOrigin="0.5,0.5">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/resources/loadingspinner.png" />
                </Rectangle.Fill>
                <Rectangle.RenderTransform>
                    <RotateTransform />
                </Rectangle.RenderTransform>
                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="AnimatedExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 1,1.5 L 4.5,5 8,1.5"
                      Stroke="#FF666666"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      >
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter x:Name="HeaderContent"
                                      Grid.Column="1"
                                      Margin="4,0,0,0"
                                      ContentSource="Content"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- Animate arrow when toggled-->
            <Trigger Property="IsChecked"
                         Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#222"
                                    TargetName="Arrow"/>
            </Trigger>
            <Trigger Property="IsPressed"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FFFEE5A4"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FF36270F"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FFFFEEC1"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FFFEE5A4"/>
    <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FF856126"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FFFEE5A4"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FF36270F"/>
    <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FFA98C3E"/>
    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FFFEE5A4"/>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="28"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                                </Grid>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                                </Grid>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="28"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                                </Grid>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            </Grid>
                            <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Ellipse Height="27" Width="27" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" />
                                <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="25" Stroke="{StaticResource Expander.Static.Circle.Stroke}" StrokeThickness="2" VerticalAlignment="Center" Width="25"/>
                            </Grid>
                            <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="3" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                            <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton HorizontalAlignment="Center" x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}"  FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="StretchyExpanderTemp" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              HorizontalAlignment="Center"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent"
                                  ContentSource="Content"
                                  DockPanel.Dock="Bottom"
                                  >

            </ContentPresenter>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                            
                                                 Storyboard.TargetProperty="MaxHeight" 
                                             From="0"
                                                 To="600"
                                                 Duration="0:0:0.8">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase  EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                                 Storyboard.TargetProperty="MaxHeight"
                                             From="600"
                                                 To="0"
                                                 Duration="0:0:0.8">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="Button" x:Key="CampaignHCButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="35" />
      
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
     

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="4" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="35"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">


                            <Grid Height="27" Width="27" >
                                <Image Name="backbutton" Height="27" Source="/resources/button_homecity_normal.png" Stretch="Uniform" />
                                <Image Name="backbuttonhover" Height="27" Source="/resources/button_homecity_hover.png" Stretch="Uniform" Opacity="0" />
                                <Image Name="backbuttondisabled" Height="27" Source="/resources/button_homecity_disabled.png" Stretch="Uniform" Opacity="0" />
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2" />
                                      
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.2" />

                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                                </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.02" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.02" Duration="0:0:.2" />
                                         <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:.2" />
                                     </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="backbuttonhover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="backbuttondisabled" Property="Image.Opacity" Value="1"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="/resources/audio/smallbutton.wav" />
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip">

        <Setter Property="FontSize" Value="18" />
        <Setter Property="MaxWidth" Value="500"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="Foreground" Value="#d6c894"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="VerticalOffset" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border x:Name="Border" Background="#34221c" BorderBrush="#6f683f" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ContentPresenter Margin="7,5,7,5" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <local:MultiplyConverter x:Key="MultiplyConverter" />
    <!--Defining ExpandCollapseToggleStyle-->
    <Style TargetType="Expander" x:Key="VerticalSlidingEmptyExpander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <ScrollViewer x:Name="ExpanderContentScrollView"
                  HorizontalScrollBarVisibility="Hidden"
                  VerticalScrollBarVisibility="Hidden"
                  HorizontalContentAlignment="Stretch"
                  VerticalContentAlignment="Top"
                  >
                        <ScrollViewer.Tag>
                            <system:Double>0.0</system:Double>
                        </ScrollViewer.Tag>
                        <ScrollViewer.Height>
                            <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </ScrollViewer.Height>
                        <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                       Storyboard.TargetName="ExpanderContentScrollView"
                       Storyboard.TargetProperty="Tag"
                       To="1"
                       Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                         Storyboard.TargetName="ExpanderContentScrollView"
                         Storyboard.TargetProperty="Tag"
                         To="0"
                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Rectangle}" x:Key="PanelBGSection">
        <Setter Property="Fill" Value="#800e0b0b" />
        <Setter Property="Opacity" Value="0.65" />
        <Setter Property="RadiusX" Value="5" />
        <Setter Property="RadiusY" Value="5" />
        <Setter Property="Stroke" Value="#8049381f" />
        <Setter Property="StrokeThickness" Value="4" />
    </Style>

    <LinearGradientBrush x:Key="TextboxStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#504c41" Offset="0" />
        <GradientStop Color="#afa898" Offset="0.5" />
        <GradientStop Color="#504c41" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextboxInnerGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#000000" Offset="0" />
        <GradientStop Color="#000000" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxInnerGradient" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#382817" Offset="0" />
        <GradientStop Color="#251504" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxInnerGradientOver" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#503921" Offset="0" />
        <GradientStop Color="#351e06" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxInnerGradientDisabled" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF271C10" Offset="0" />
        <GradientStop Color="#251504" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#ffea9e" Offset="0" />
        <GradientStop Color="#e8c760" Offset="1" />
        <GradientStop Color="#cda440" Offset="2" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradient3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FF9E9E9E" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonTextGradientOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#fff5d2" Offset="0" />
        <GradientStop Color="#f3dd9a" Offset="1" />
        <GradientStop Color="#ebc15c" Offset="2" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonInnerGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#2a1108" Offset="0" />
        <GradientStop Color="#502211" Offset="0.2" />
        <GradientStop Color="#532312" Offset="0.5" />
        <GradientStop Color="#502211" Offset="0.8" />
        <GradientStop Color="#2a1108" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientDisabled" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#141414" Offset="0" />
        <GradientStop Color="#393939" Offset="0.15" />
        <GradientStop Color="#535353" Offset="0.40" />
        <GradientStop Color="#535353" Offset="0.60" />
        <GradientStop Color="#393939" Offset="0.85" />
        <GradientStop Color="#141414" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#2e0f05" Offset="0" />
        <GradientStop Color="#511f0d" Offset="0.15" />
        <GradientStop Color="#75351c" Offset="0.40" />
        <GradientStop Color="#75351c" Offset="0.60" />
        <GradientStop Color="#511f0d" Offset="0.85" />
        <GradientStop Color="#2e0f05" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradientPress" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#3e1001" Offset="0" />
        <GradientStop Color="#661e05" Offset="0.15" />
        <GradientStop Color="#a73e16" Offset="0.40" />
        <GradientStop Color="#a73e16" Offset="0.60" />
        <GradientStop Color="#661e05" Offset="0.85" />
        <GradientStop Color="#3e1001" Offset="1" />
    </LinearGradientBrush>

    <ImageBrush x:Key="wood_tile" ImageSource="/resources/wood.png" />

    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
 
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <LinearGradientBrush x:Key="MainMenuButtonInnerGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#170803" Offset="0" />
        <GradientStop Color="#3b190d" Offset="0.15" />
        <GradientStop Color="#532412" Offset="0.40" />
        <GradientStop Color="#532412" Offset="0.60" />
        <GradientStop Color="#3b190d" Offset="0.85" />
        <GradientStop Color="#170803" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#755f22" Offset="0" />
        <GradientStop Color="#ceb165" Offset="0.25" />
        <GradientStop Color="#ffe6a6" Offset="0.5" />
        <GradientStop Color="#ceb165" Offset="0.25" />
        <GradientStop Color="#755f22" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonStrokeGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#a48632" Offset="0" />
        <GradientStop Color="#ffd974" Offset="0.25" />
        <GradientStop Color="#fff9e9" Offset="0.5" />
        <GradientStop Color="#ffd974" Offset="0.25" />
        <GradientStop Color="#a48632" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MainMenuButtonStrokeGradientDisabled" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#5b5b5b" Offset="0" />
        <GradientStop Color="#c0c0c0" Offset="0.25" />
        <GradientStop Color="#f9f9f9" Offset="0.5" />
        <GradientStop Color="#c0c0c0" Offset="0.25" />
        <GradientStop Color="#5b5b5b" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#a58739" Offset="0" />
        <GradientStop Color="#fee5a4" Offset="0.5" />
        <GradientStop Color="#a58739" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0" />
                <GradientStop Color="#EEE" Offset="0.1" />
                <GradientStop Color="#EEE" Offset="0.9" />
                <GradientStop Color="#FFF" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <ImageBrush x:Key="Checkbox_On" ImageSource="/resources/checkbox_on.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_On_Hover" ImageSource="/resources/checkbox_on_hover.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Off" ImageSource="/resources/checkbox_off.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Hover" ImageSource="/resources/checkbox_hover.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Disabled_Off" ImageSource="/resources/checkbox_disabled_off.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Disabled_On" ImageSource="/resources/checkbox_disabled_on.png" Stretch="Fill" />
    <ImageBrush x:Key="Checkbox_Focused" ImageSource="/resources/checkbox_focused_hollow.png" Stretch="Fill" />


    <Style TargetType="TextBlock" x:Key="CampaignTitleTextBlockStyle">
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="3" Color="Black" Direction="-90" ShadowDepth="3" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="subInfoLeft">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />

        <Setter Property="Foreground" Value="#dbd5c3" />
        <Setter Property="FontSize" Value="14" />
        
    </Style>


    <LinearGradientBrush x:Key="ScrollbarGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#a08116" />
                <GradientStop Offset="0.5" Color="#f4e09b" />
                <GradientStop Offset="1.0" Color="#a08116" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>



    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Margin="1"
                        Background="{StaticResource NormalBrush}"
                        BorderBrush="{StaticResource NormalBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{StaticResource GlyphBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Width="8"
                        Margin="8,0,-2,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent" />
                        <Border
                            x:Name="CornerScrollBarRectangle"
                            Width="Auto"
                            Height="Auto"
                            Margin="13,3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                            <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="1" />
                <RowDefinition Height="*" />
                <RowDefinition MaxHeight="1" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Width="16"
                Margin="10,0,0,0"
                Background="Black"
                CornerRadius="5" />
            <RepeatButton
                Grid.Row="0"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="1,0,1,0"
                        Background="{StaticResource ScrollbarGradient}"
                        BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                        Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Row="3"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="1" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition MaxWidth="1" Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Height="16"
                Margin="10,0"
                Background="Black"
                CornerRadius="5" />
            <RepeatButton
                Grid.Column="0"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="0,1,0,1"
                        Background="{StaticResource ScrollbarGradient}"
                        BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                        Style="{StaticResource ScrollBarThumbHorizontal}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Column="3"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--  Defining ScrollViewer  -->
    <Style x:Key="{x:Type ScrollViewer}" TargetType="ScrollViewer">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>


                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                            ClipToBounds="true"
                            Content="{TemplateBinding Content}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Width="20.0"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            Orientation="Vertical"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />


                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            Height="20.0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Defining LeftScrollViewer  -->
    <Style x:Key="LeftScrollViewer" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="1"
                            ClipToBounds="true"
                            Content="{TemplateBinding Content}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="0"
                            Width="20.0"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            Orientation="Vertical"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            Height="20.0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="PlayerNameStyle">
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />

        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
       
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Color="Black" Direction="-90" ShadowDepth="3" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="CircleButton">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <SoundPlayerAction Source="/resources/audio/bigbutton.wav" />
            </EventTrigger>
        </Style.Triggers>

        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Background" Value="{StaticResource MainMenuButtonInnerGradient}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="test" Height="48" Width="48" >
                        <Grid Name="buttoncontainer" RenderTransformOrigin="0.5, 0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>

                            <Rectangle Name="background" Grid.Column="1" Height="46" Fill="{StaticResource ButtonInnerGradient}" RadiusX="50" RadiusY="50">
                            </Rectangle>

                            <Rectangle Name="highlightover" Grid.Column="1" Height="46" Fill="{StaticResource MainMenuButtonInnerGradientOver}" RadiusX="50" RadiusY="50" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="highlightpress" Grid.Column="1" Height="46" Fill="{StaticResource MainMenuButtonInnerGradientPress}" RadiusX="50" RadiusY="50" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="strokeblack" Grid.ColumnSpan="3" Height="48" Fill="Transparent" StrokeThickness="3" Stroke="Black" RadiusX="50" RadiusY="50">
                            </Rectangle>

                            <Rectangle Name="strokegold" Grid.Column="1" Height="46" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource ButtonStrokeGradient}" RadiusX="50" RadiusY="50">
                            </Rectangle>

                            <Rectangle Name="strokegoldover" Grid.Column="1" Height="46" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource MainMenuButtonStrokeGradientOver}" RadiusX="50" RadiusY="50" Opacity="0">
                            </Rectangle>
                        </Grid>

                                                                                                        <Viewbox Width="18" Height="18"  >
                                                                            <Canvas Width="24" Height="24">
                                                                                <Path Fill="{StaticResource ButtonTextGradient}" Data="M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z" />
                                                                            </Canvas>
                                                                        </Viewbox>
        
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--
                        Having these triggers in this order makes it so that is the order they execute in.
                        When the player clicks on the button for the first time, Button.IsFocused and IsPressed 
                        get executed, but the last one overrides the current animation. So before when IsFocused
                        was after IsPressed, only IsFocused occured visually, and since the final state looks identical
                        to the final state of MouseOver, the end result looked like nothing happened, but subsequent 
                        clicks executed IsPressed because IsFocused was already true, therefore not changing states 
                        and not executing.
                        -->
                        <!--
                        -->
                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard2" />
                                <BeginStoryboard Name="FocusStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="FocusStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
       
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="IsPressedStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard Name="IsPressedStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                          
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
           
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource MainMenuButtonInnerGradientDisabled}" />
                            <Setter TargetName="strokegold" Property="Stroke" Value="{StaticResource MainMenuButtonStrokeGradientDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="MainMenuButton">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <SoundPlayerAction Source="/resources/audio/bigbutton.wav" />
            </EventTrigger>
        </Style.Triggers>

        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="32" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Background" Value="{StaticResource MainMenuButtonInnerGradient}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="test" Height="32" Width="auto" MinWidth="100">
                        <Grid Name="buttoncontainer" RenderTransformOrigin="0.5, 0.5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="1"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Grid.RenderTransform>

                            <Rectangle Name="background" Grid.Column="1" Height="30" Fill="{StaticResource ButtonInnerGradient}" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="highlightover" Grid.Column="1" Height="30" Fill="{StaticResource MainMenuButtonInnerGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="highlightpress" Grid.Column="1" Height="30" Fill="{StaticResource MainMenuButtonInnerGradientPress}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>

                            <Rectangle Name="strokeblack" Grid.ColumnSpan="3" Height="32" Fill="Transparent" StrokeThickness="3" Stroke="Black" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegold" Grid.Column="1" Height="30" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource ButtonStrokeGradient}" RadiusX="5" RadiusY="5">
                            </Rectangle>

                            <Rectangle Name="strokegoldover" Grid.Column="1" Height="30" Fill="Transparent" StrokeThickness="2" Stroke="{StaticResource MainMenuButtonStrokeGradientOver}" RadiusX="5" RadiusY="5" Opacity="0">
                            </Rectangle>
                        </Grid>

                        <Viewbox>
                            <TextBlock Name="ButtonText" Grid.Column="1" TextAlignment="Center" MinWidth="{TemplateBinding ActualWidth}" VerticalAlignment="Center" FontSize="14" Foreground="{StaticResource ButtonTextGradient}" Margin="5,5,5,0" Text="{TemplateBinding Content}"/>
                        </Viewbox>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--
                        Having these triggers in this order makes it so that is the order they execute in.
                        When the player clicks on the button for the first time, Button.IsFocused and IsPressed 
                        get executed, but the last one overrides the current animation. So before when IsFocused
                        was after IsPressed, only IsFocused occured visually, and since the final state looks identical
                        to the final state of MouseOver, the end result looked like nothing happened, but subsequent 
                        clicks executed IsPressed because IsFocused was already true, therefore not changing states 
                        and not executing.
                        -->
                        <!--
                        -->
                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard2" />
                                <BeginStoryboard Name="FocusStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="FocusStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="IsPressedStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard Name="IsPressedStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.05" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.6" RepeatBehavior="Forever" AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsPressedStoryBoard" />
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="buttoncontainer" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="highlightpress" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="strokegoldover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradientOver}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ButtonTextGradient3}" />
                            <Setter TargetName="background" Property="Fill" Value="{StaticResource MainMenuButtonInnerGradientDisabled}" />
                            <Setter TargetName="strokegold" Property="Stroke" Value="{StaticResource MainMenuButtonStrokeGradientDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox" x:Key="Checkbox_Medium">
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#dbd5c3" />
        
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <Border x:Name="Border" Width="24" Height="24" CornerRadius="0" Background="{StaticResource Checkbox_Off}" BorderThickness="2" BorderBrush="Transparent">
                            <Path Width="0" Height="0" x:Name="CheckMark" SnapsToDevicePixels="False" Stroke="Transparent" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>
                        <ContentPresenter Margin="4,2,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>

                        <Trigger Property="Button.IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_On}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Hover}" />
                            <Setter Property="TextBlock.Foreground" Value="White" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Checkbox_Off}" />
                        </MultiTrigger>



                        <EventTrigger RoutedEvent="Click">
                            <SoundPlayerAction Source="/resources/audio/smallbutton.wav" />
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BitmapImage x:Key="combo_arrow" UriSource="/resources/combo_arrow.png" />

    <ImageBrush x:Key="hud_chat_combobox" ImageSource="/resources/images/hud/hud_chat_combobox.png" />

    <LinearGradientBrush x:Key="ComboBoxStrokeGradient" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#4f4731" Offset="0" />
        <GradientStop Color="#b79f66" Offset="0.5" />
        <GradientStop Color="#4f4731" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxStrokeGradientOver" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#776a45" Offset="0" />
        <GradientStop Color="#d3b367" Offset="0.5" />
        <GradientStop Color="#776a45" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxStrokeGradientDisabled" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#5b5b5b" Offset="0" />
        <GradientStop Color="#c0c0c0" Offset="0.5" />
        <GradientStop Color="#5b5b5b" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxStrokeGradientSelected" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#9f894d" Offset="0" />
        <GradientStop Color="#f2cb6d" Offset="0.5" />
        <GradientStop Color="#9f894d" Offset="1" />
    </LinearGradientBrush>



    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="14" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="4" Background="{StaticResource ComboBoxInnerGradient}" BorderBrush="{StaticResource ComboBoxStrokeGradient}" BorderThickness="2" />
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="#b49d64" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Visibility="Hidden" />
            <Image x:Name="ArrowImage" Grid.Column="1" Height="14" Width="14" Margin="-20,0,0,0" Source="{StaticResource combo_arrow}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButtonOver" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="14" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="4" Background="{StaticResource ComboBoxInnerGradientOver}" BorderBrush="{StaticResource ComboBoxStrokeGradient}" BorderThickness="2" />
            <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="#b49d64" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Visibility="Hidden" />
            <Image Grid.Column="1" Height="14" Width="14" Margin="-20,0,0,0" Source="{StaticResource combo_arrow}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                </Trigger.EnterActions>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxInnerGradientOver}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ComboBox" x:Key="ComboboxCharacterEllipsis">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Width" Value="192" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="MaxDropDownHeight" Value="380"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,5,23,3" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Width" Value="160"></Setter>
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" Foreground="White" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#1c150c" BorderThickness="2" BorderBrush="#4f4731" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </Trigger.EnterActions>
                            <Setter TargetName="ToggleButton" Property="Template" Value="{StaticResource ComboBoxToggleButtonOver}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <SoundPlayerAction Source="/resources/audio/smallbutton.wav" />
                        </EventTrigger>
                        <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <SoundPlayerAction Source="/resources/audio/smallbutton.wav" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="hcInfoName">
        <Setter Property="Width" Value="192" />
        <Setter Property="Height" Value="24" />
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FontSize" Value="14" />

        <Setter Property="Foreground" Value="#d5d5d5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxLength" Value="30"/>
        <!-- broken in WPFG -->
        <!--<Setter Property="CaretBrush" Value="White"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border" CornerRadius="4" Padding="12,0,0,0" Background="{StaticResource TextboxInnerGradient}" BorderBrush="{StaticResource TextboxStrokeGradient}" BorderThickness="2" Height="24">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFDADADA" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FFA4A4A4" />
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="ImageButton">
        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True"/>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="#36270f"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="background">
                        <Grid x:Name="ButtonBody" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform/>
                            </Grid.RenderTransform>

                            <Rectangle Fill="Black" RadiusX="3" RadiusY="3"></Rectangle>
                            <Rectangle Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Margin="1.5"></Rectangle>

                            <Rectangle x:Name="glow" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="/resources/images/hud/imagebutton_glow.png" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="glow2" Fill="White" RadiusX="3" RadiusY="3" Margin="1.5" Opacity="0"/>

                        </Grid>
                        
                        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Rectangle Fill="Black" Opacity="0.5" Margin="3" RadiusX="5" RadiusY="5"/>
                            <TextBlock x:Name="UnitSelection_Text" TextAlignment="Center" FontSize="12" FontWeight="Bold" Margin="7,5,7,0" Foreground="White" Text="{TemplateBinding Content}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                      

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <SoundPlayerAction Source="/resources/audio/mouseover_00.wav" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1" Duration="0:0:.2" />
                                        <DoubleAnimation Storyboard.TargetName="glow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />


    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#7d5f3a" Offset="0.0" />
                <GradientStop Color="#7d5f3a" Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="4" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" Background="Transparent">
                        <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="True" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" 
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" 
                                                  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter TargetName="ContentPanel" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TabItem}" TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource ButtonTextGradient}" />
        
        
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" Color="Black" Direction="-90" ShadowDepth="1.5" RenderingBias="Quality" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Margin="5,0,0,5">
                        <Border  Name="Border" Background="Transparent" BorderThickness="2" CornerRadius="4">
                            <ContentPresenter  x:Name="contentPresenter" ContentSource="Header" Focusable="False" RecognizesAccessKey="True" />
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#755f22" Offset="0" />
                                            <GradientStop Color="#ceb165" Offset="0.25" />
                                            <GradientStop Color="#ffe6a6" Offset="0.5" />
                                            <GradientStop Color="#ceb165" Offset="0.25" />
                                            <GradientStop Color="#755f22" Offset="1" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MainMenuButtonInnerGradientPress}" />
                            <Setter Property="BorderBrush" Value="{StaticResource MainMenuButtonStrokeGradientOver}"/>
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="resources/audio/smallbutton.wav" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="-100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MainMenuButtonInnerGradient}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <BitmapImage x:Key="title_bkg" UriSource="/resources/images/campaignmenu/campaignselect_textbg.png" />
    <BitmapImage x:Key="title_mask" UriSource="/resources/images/campaignmenu/levels/lvlcard_mask.png" />
    <ImageBrush x:Key="titlebarbg" ImageSource="/resources/titlebar_tile.png" />
    <BitmapImage x:Key="close_icon" UriSource="/resources/close_icon.png" />

    <LinearGradientBrush x:Key="TitlebarGradientOverlay" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Offset="0" Color="#090807" />
        <GradientStop Offset="0.25" Color="#cfab7f" />
        <GradientStop Offset="0.75" Color="#cfab7f" />
        <GradientStop Offset="1" Color="#090807" />
    </LinearGradientBrush>
    <ControlTemplate x:Key="Titlebar">
        <Grid Height="50" VerticalAlignment="Top">
            <Rectangle Fill="{StaticResource titlebarbg}" />
            <Rectangle Fill="{StaticResource TitlebarGradientOverlay}" Opacity="0.25" />
            <Rectangle
                Height="4"
                VerticalAlignment="Bottom"
                Fill="Black" />
            <Rectangle
                Height="2"
                Margin="0,0,0,1"
                VerticalAlignment="Bottom"
                Fill="{StaticResource ButtonStrokeGradient}" />
        </Grid>
    </ControlTemplate>




    <Style x:Key="scenarioEscButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />

        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />

        <Setter Property="FontFamily" Value="/Fonts/#Trajan Pro 3" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#36270f" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Name="border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="3"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Offset="0.0" Color="#4f4731" />
                                        <GradientStop Offset="0.5" Color="#b79f66" />
                                        <GradientStop Offset="1.0" Color="#4f4731" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="5"
                                Direction="-90"
                                RenderingBias="Quality"
                                ShadowDepth="0"
                                Color="Black" />
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#5d451e" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/mouseover_02.wav" />
                            </Trigger.EnterActions>
                        </Trigger>



                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#855c1b" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <SoundPlayerAction Source="/resources/audio/backbutton.wav"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>